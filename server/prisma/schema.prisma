// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id           Int            @id @unique @default(autoincrement())
  fullName     String         @db.VarChar(255)
  userName     String?        @db.VarChar(255)
  email        String         @unique @db.VarChar(255)
  password     String?
  is_staff     Boolean
  clinic       Clinic[]
  doctor       Doctor[]
  review       Review[]
  savedClinics SavedClinics[]
  chatroom     ChatRoom[]
  messages     Message[]
}

model Clinic {
  id Int @id @unique @default(autoincrement())

  is_approved     Boolean  @default(false)
  is_rejected     Boolean  @default(false)
  phonenumber     String   @db.VarChar(255)
  email           String   @unique @db.VarChar(255)
  focus           String
  insurancesTaken String
  address         String   @db.VarChar(255)
  name            String   @db.VarChar(255)
  description     String
  websiteUrl      String?
  img             String?
  userId          Int
  doctor          Doctor[]
  review          Review[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Doctor {
  id Int @id @unique @default(autoincrement())

  firstName      String  @db.VarChar(255)
  lastName       String  @db.VarChar(255)
  specialization String
  address        String
  city           String
  state          String
  zipcode        String
  phonenumber    String  @db.VarChar(255)
  email          String  @unique @db.VarChar(255)
  hospital       String
  img            String?
  userId         Int
  clinicId       Int

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  clinic Clinic @relation(fields: [clinicId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([clinicId])
}

model Review {
  id Int @id @default(autoincrement())

  rating   Int
  comment  String @db.VarChar(1000)
  clinicId Int
  userId   Int

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  clinic Clinic @relation(fields: [clinicId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([clinicId])
}

model SavedClinics {
  id Int @id @default(autoincrement())

  clinicId   Int
  clinicName String
  userId     Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  // clinic Clinic @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  //  @@index([clinicId])

  @@index([userId])
}

model ChatRoom {
  id    Int    @id @default(autoincrement())
  users User[]

  messages Message[]
}

model Message {
  id       Int      @id @default(autoincrement())
  content  String
  createAt DateTime
  chatId   Int
  chat     ChatRoom @relation(fields: [chatId], references: [id], onDelete: Cascade)

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([chatId])
}
