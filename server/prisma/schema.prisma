// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int      @id @unique @default(autoincrement())
  firstName String?  @db.VarChar(255)
  lastName  String?  @db.VarChar(255)
  userName  String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String
  clinic    Clinic[]
  doctor    Doctor[]
  review    Review[]
}

model Clinic {
  id Int @id @unique @default(autoincrement())

  phonenumber String   @db.VarChar(255)
  email       String   @unique @db.VarChar(255)
  address     String   @db.VarChar(255)
  name        String   @db.VarChar(255)
  description String
  userId      Int
  doctor      Doctor[]
  review      Review[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Doctor {
  id Int @id @unique @default(autoincrement())

  firstName      String @db.VarChar(255)
  lastName       String @db.VarChar(255)
  specialization String
  address        String
  city           String
  state          String
  zipcode        String
  phonenumber    String @db.VarChar(255)
  email          String @unique @db.VarChar(255)
  hospital       String
  userId         Int
  clinicId       Int

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
 clinic Clinic @relation(fields: [clinicId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([clinicId])
}

model Review {
  id        Int  @id @default(autoincrement())

  rating    Int
  comment   String   @db.VarChar(1000)
  clinicId  Int
  userId    Int

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  clinic Clinic @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  

   @@index([userId])
   @@index([clinicId])
   
  
}